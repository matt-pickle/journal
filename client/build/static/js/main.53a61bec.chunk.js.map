{"version":3,"sources":["components/Context.js","components/ThemeSwitch.js","components/NavLink.js","components/Button.js","components/LogoutButton.js","components/Navigation.js","components/NewEntry.js","components/Content.js","components/Main.js","components/ProtectedRoute.js","components/Register.js","components/Login.js","components/App.js","index.js"],"names":["Context","React","createContext","ContextProvider","props","useState","user","setUser","journal","setJournal","theme","setTheme","forceUpdate","setForceUpdate","useEffect","fetch","then","res","ok","text","JSON","parse","console","error","Provider","value","updateContext","prev","children","ThemeSwitch","useContext","switchIcon","className","onClick","newTheme","method","NavLink","hoverClass","setHoverClass","id","onMouseEnter","window","navigator","maxTouchPoints","msMaxTouchPoints","onMouseLeave","onTouchStart","onTouchEnd","Button","LogoutButton","redirect","setRedirect","to","Navigation","entryDates","setEntryDates","map","entry","date","displayEntry","isNavOpen","class","closeNav","NewEntry","input","setInput","setDate","today","Date","month","getMonth","day","getDate","year","getFullYear","placeholder","onChange","event","target","newEntry","updatedJournal","existingEntry","filter","entryObj","length","journalWithoutToday","stringify","Content","startNewEntry","isNewEntryOpen","updateMain","displayedEntry","Main","setIsNavOpen","setDisplayedEntry","setIsNewEntryOpen","entryDate","item","ProtectedRoute","isAuth","setIsAuth","Register","username","setUsername","password","setPassword","message","setMessage","htmlFor","type","history","push","Login","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.53a61bec.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nconst Context = React.createContext();\r\n\r\nfunction ContextProvider(props) {\r\n  const [user, setUser] = useState(\"\");\r\n  const [journal, setJournal] = useState([]);\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const [forceUpdate, setForceUpdate] = useState(true);\r\n\r\n  useEffect(() => {\r\n    //Gets username from web token\r\n    fetch(\"/user/getUser\")\r\n      .then(res => {\r\n        if (!res.ok) {\r\n          res.text().then(text => {\r\n            console.error(text);\r\n          });\r\n        } else {\r\n          res.text().then(text => {\r\n            setUser(text);\r\n            //Gets current user's journal from database\r\n            fetch(`/journal/getJournal?user=${text}`)\r\n              .then(res => {\r\n                if (!res.ok) {\r\n                  res.text().then(text => {\r\n                    console.error(text);\r\n                  });\r\n                } else {\r\n                  res.text().then(text => {\r\n                    setJournal(JSON.parse(text));\r\n                  });\r\n                }\r\n              });\r\n            //Gets current user's theme setting from database\r\n            fetch(`/theme/getTheme?user=${text}`)\r\n            .then(res => {\r\n              if (!res.ok) {\r\n                res.text().then(text => {\r\n                  console.error(text);\r\n                });\r\n              } else {\r\n                res.text().then(text => {\r\n                  setTheme(text);\r\n                });\r\n              }\r\n            });\r\n          });\r\n        }\r\n      });\r\n  }, [forceUpdate]);\r\n\r\n  \r\n  //Forces rerender of Context\r\n  function updateContext() {\r\n    setForceUpdate(prev => !prev);\r\n  }\r\n  \r\n\r\n  return (\r\n    <Context.Provider value={{user: user, journal: journal, theme: theme, updateContext: updateContext}}>\r\n      {props.children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport {ContextProvider, Context};","import React, {useContext} from \"react\";\nimport {Context} from \"./Context\";\n\nfunction ThemeSwitch() {\n  const {user, theme, updateContext} = useContext(Context);\n\n  function toggleTheme() {\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\";\n    fetch(`/theme/updateTheme?user=${user}&theme=${newTheme}`, {\n      method: \"PUT\"\n    })\n    .then(res => {\n      if (!res.ok) {\n        res.text().then(text => {\n          console.error(text);\n        });\n      } else {\n        updateContext();\n      }\n    });\n  }\n\n  //Changes which switch icon to display depending on the current theme\n  const switchIcon = theme === \"light\" ? \"fa-toggle-off\" : \"fa-toggle-on\";\n\n  return (\n    <div className=\"theme-switch-container\">\n      <span className=\"theme-switch-label\">Switch Theme: </span>\n      <button className={\"theme-switch fas \" + switchIcon}\n            onClick={toggleTheme}>\n      </button>\n    </div>\n    \n    )\n}\n\nexport default ThemeSwitch;","import React, {useState} from \"react\";\r\n\r\nfunction NavLink(props) {\r\n  const [hoverClass, setHoverClass] = useState(\"\");\r\n\r\n  //Applies hover effect class if not using a touch screen\r\n  function hover() {\r\n    if (\"ontouchstart\" in window\r\n      || navigator.maxTouchPoints > 0\r\n      || navigator.msMaxTouchPoints > 0) {\r\n        setHoverClass(\"\")\r\n    } else {\r\n      setHoverClass(\"hovered\");\r\n    }\r\n  }\r\n\r\n  function unHover() {\r\n    setHoverClass(\"\");\r\n  }\r\n\r\n  function touch() {\r\n    setHoverClass(\"hovered\");\r\n  }\r\n\r\n  function unTouch() {\r\n    setHoverClass(\"\");\r\n  }\r\n\r\n  return (\r\n    <button className={`nav-link ${hoverClass}`}\r\n            id={props.id}\r\n            onMouseEnter={hover}\r\n            onMouseLeave={unHover}\r\n            onTouchStart={touch}\r\n            onTouchEnd={unTouch}\r\n            onClick={props.onClick}\r\n    >\r\n      {props.text}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default NavLink;","import React, {useState} from \"react\";\r\n\r\nfunction Button(props) {\r\n  const [hoverClass, setHoverClass] = useState(\"\");\r\n\r\n  //Applies hover effect class if not using a touch screen\r\n  function hover() {\r\n    if (\"ontouchstart\" in window\r\n      || navigator.maxTouchPoints > 0\r\n      || navigator.msMaxTouchPoints > 0) {\r\n        setHoverClass(\"\")\r\n    } else {\r\n      setHoverClass(\"hovered\");\r\n    }\r\n  }\r\n\r\n  function unHover() {\r\n    setHoverClass(\"\");\r\n  }\r\n\r\n  function touch() {\r\n    setHoverClass(\"hovered\");\r\n  }\r\n\r\n  function unTouch() {\r\n    setHoverClass(\"\");\r\n  }\r\n\r\n  return (\r\n    <button className={`button ${hoverClass}`}\r\n            id={props.id}\r\n            onMouseEnter={hover}\r\n            onMouseLeave={unHover}\r\n            onTouchStart={touch}\r\n            onTouchEnd={unTouch}\r\n            onClick={props.onClick}\r\n    >\r\n      {props.text}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button","import React, {useState} from \"react\";\nimport Button from \"./Button\";\nimport {Redirect} from \"react-router-dom\";\n\nfunction LogoutButton(props) {\n  const [redirect, setRedirect] = useState(false);\n\n  function logout() {\n    fetch(\"/user/logout\")\n    .then(res => {\n      if (!res.ok) {\n        console.error(\"Logout failed\");\n      } else {\n        //Redirects to login page if logout is successful\n        setRedirect(true);\n      }\n    });\n  }\n\n  return (\n    <div id={props.id}>\n      <Button text=\"LOGOUT\"\n              onClick={logout}\n      />\n      {redirect ? <Redirect to=\"/login\" /> : null}\n    </div>\n    \n  )\n}\n\nexport default LogoutButton;","import React, {useState, useContext, useEffect} from \"react\";\nimport ThemeSwitch from \"./ThemeSwitch\";\nimport NavLink from \"./NavLink\";\nimport LogoutButton from \"./LogoutButton\";\nimport {Context} from \"./Context\";\n\nfunction Navigation(props) {\n  const {user, journal, theme} = useContext(Context);\n  const [entryDates, setEntryDates] = useState([]);\n\n  //Creates nav links for previous entries\n  useEffect(() => {\n    setEntryDates(\n      journal.map(entry => {\n        return <NavLink text={entry.date}\n                        onClick={() => props.displayEntry(entry.date)}\n               />;\n      })\n    );\n  }, [journal]);\n\n  return (\n    <div className={\"nav-container \" + props.isNavOpen + \" \" + theme} >\n      <button class=\"close-nav-button\"\n              onClick={props.closeNav}\n      >&times;</button>\n      <h2 className=\"greeting\">Hello, {user}!</h2>\n      <ThemeSwitch />\n      <LogoutButton />\n      <p className=\"previous-entries\">Previous Entries:</p>\n      <div className=\"nav-links-container\">{entryDates}</div>\n      \n    </div>\n  )\n}\n\nexport default Navigation;","import React, {useState, useContext, useEffect} from \"react\";\nimport {Context} from \"./Context\";\nimport Button from \"./Button\";\n\nfunction NewEntry() {\n  const {user, journal, theme, updateContext} = useContext(Context);\n  const [input, setInput] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n\n  useEffect(() => {\n    const today = new Date();\n    const month = today.getMonth() + 1;\n    const day = today.getDate();\n    const year = today.getFullYear();\n    setDate(`${month}-${day}-${year}`);\n  }, []);\n\n  function handleChange(event) {\n    setInput(event.target.value);\n  }\n\n  function addEntry() {\n    //Checks for existing entry for today's date\n    const existingEntry = journal.filter(entryObj => {\n      return entryObj.date === date;\n    });\n    let newEntry;\n    let updatedJournal;\n    //Appends new entry to today's existing entry or adds new entry if one does not exist for today\n    if (existingEntry.length > 0) {\n      newEntry = {date: date, entry: existingEntry[existingEntry.length - 1].entry + \"\\n---\\n\" + input};\n      const journalWithoutToday = journal.filter(entryObj => {\n        return entryObj.date !== date;\n      });\n      updatedJournal = [...journalWithoutToday, newEntry];\n    } else {\n      newEntry = {date: date, entry: input};\n      updatedJournal = [...journal, newEntry];\n    }\n\n    fetch(`/journal/updateJournal?user=${user}&journal=${JSON.stringify(updatedJournal)}`, {\n      method: \"PUT\"\n    })\n    .then(res => {\n      if (!res.ok) {\n        res.text().then(text => {\n          console.error(text);\n        });\n      } else {\n        updateContext();\n        setInput(\"\");\n      }\n    });\n  }\n\n  return (\n    <div className={\"new-entry-container \" + theme}>\n      <h1 className=\"entry-header\">{date}</h1>\n      <textarea className=\"new-entry-textarea\"\n                placeholder=\"Type your entry here\"\n                value={input}\n                onChange={handleChange}\n      />\n      <Button text=\"SUBMIT\"\n              onClick={addEntry}\n      />\n    </div>\n  )\n}\n\nexport default NewEntry;","import React, {useContext} from \"react\";\nimport {Context} from \"./Context\";\nimport Button from \"./Button\";\nimport NewEntry from \"./NewEntry\";\nimport \"../styles/styles.scss\";\n\nfunction Content(props) {\n  const {theme} = useContext(Context);\n\n  return (\n    <div className={\"content-container \" + theme}>\n      <Button text=\"NEW ENTRY\" \n              onClick={props.startNewEntry}\n      />\n      {props.isNewEntryOpen ?\n        <NewEntry updateMain={props.updateMain} /> :\n        <div>\n          <h1 className=\"entry-header\">{props.displayedEntry.date}</h1>\n          <p className=\"displayed-entry\">{props.displayedEntry.entry}</p>\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default Content;","import React, {useState, useContext} from \"react\";\nimport {Context} from \"./Context\";\nimport Navigation from \"./Navigation\";\nimport Content from \"./Content\";\n\nfunction Main() {\n  const {journal, theme} = useContext(Context);\n  const [isNavOpen, setIsNavOpen] = useState(\"\");\n  const [displayedEntry, setDisplayedEntry] = useState(\"\");\n  const [isNewEntryOpen, setIsNewEntryOpen] = useState(false);\n\n  function openNav() {\n    setIsNavOpen(\"open\");\n  }\n\n  function closeNav() {\n    setIsNavOpen(\"\");\n  }\n\n  //Changes displayed entry when a nav link is clicked\n  function displayEntry(entryDate) {\n    setDisplayedEntry(\n      journal.filter(item => {\n        return item.date === entryDate;\n      })[0]\n    )\n    setIsNewEntryOpen(false);\n    closeNav();\n  }\n  \n  //Opens New Entry box when \"New Entry\" button is clicked\n  function startNewEntry() {\n    setIsNewEntryOpen(true);\n  }\n\n  return (\n    <div className={\"main-container \" + theme}>\n      <button className=\"open-nav-button fas fa-bars\"\n              onClick={openNav}>\n      </button>\n      <Navigation isNavOpen={isNavOpen}\n                  closeNav={closeNav}\n                  displayEntry={displayEntry}\n      />\n      <Content displayedEntry={displayedEntry}\n               isNewEntryOpen={isNewEntryOpen}\n               startNewEntry={startNewEntry}\n      />\n    </div>\n  )\n}\n\nexport default Main;","import React, {useState, useEffect} from \"react\";\nimport {Route, Redirect} from \"react-router-dom\";\n\nfunction ProtectedRoute(props) {\n  const [isAuth, setIsAuth] = useState(true);\n\n  useEffect(() => {\n    fetch(\"/user/getUser\")\n      .then(res => {\n        if (!res.ok) {\n          res.text().then(text => {\n            console.error(text);\n            setIsAuth(false);\n          })\n        } else {\n          setIsAuth(true);\n        }\n      });\n  }, []);\n\n  return isAuth ? <Route {...props} /> : <Redirect to=\"/login\" />;\n}\n\nexport default ProtectedRoute;","import React, {useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Button from \"./Button\";\n\nfunction Register(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState();\n\n  function handleNameChange(event) {\n    setUsername(event.target.value);\n  }\n\n  function handlePasswordChange(event) {\n    setPassword(event.target.value);\n  }\n\n  function handleClick() {\n    fetch(`/user/register?username=${username}&password=${password}`, {\n      method: \"POST\"\n    })\n    .then(res => {\n      if (!res.ok) {\n        //Gives error message if registration is not successful\n        res.text().then(text => {\n          setMessage(text);\n          console.error(text);\n        })\n      } else {\n        //Redirects to home page if registration is successful\n        props.history.push(\"/\");\n      }\n    });\n    setUsername(\"\");\n    setPassword(\"\");\n  }\n\n  return (\n    <div className=\"register-container\">\n      <p className=\"reg-title\">REGISTER NEW USER</p>\n      {message ? <p>***{message}***</p> : null}\n      <div className=\"reg-input-box\">\n        <label htmlFor=\"reg-username\" className=\"reg-label\">Username:</label>\n        <input type=\"text\"\n                id=\"reg-username\"\n                value={username}\n                onChange={handleNameChange}\n        />\n      </div>\n      <div className=\"reg-input-box\">\n        <label htmlFor=\"reg-password\" className=\"reg-label\">Password:</label>\n        <input type=\"password\"\n                id=\"reg-password\"\n                value={password}\n                onChange={handlePasswordChange}\n        />\n      </div>\n    <Button text=\"REGISTER\"\n              onClick={handleClick}\n    />\n    <p className=\"reg-text\">Already have an account?</p>\n    <Link to=\"/login\">\n      <Button text=\"GO TO LOGIN PAGE\" />\n    </Link>\n  </div>\n  )\n}\n\nexport default Register;","import React, {useState} from \"react\";\nimport Button from \"./Button\";\nimport {Link} from \"react-router-dom\";\n\nfunction Login(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState();\n\n  function handleNameChange(event) {\n    setUsername(event.target.value);\n  }\n\n  function handlePasswordChange(event) {\n    setPassword(event.target.value);\n  }\n\n  function handleClick() {\n    fetch(`/user/login?username=${username}&password=${password}`, {\n      method: \"POST\"\n    })\n    .then(res => {\n      if (!res.ok) {\n        //Gives error message if login is not successful\n        res.text().then(text => {\n          setMessage(text);\n          console.error(text);\n        })\n      } else {\n        //Redirects to home page if login is successful\n        props.history.push(\"/main\");\n      }\n    });\n    setUsername(\"\");\n    setPassword(\"\");\n  }\n\n  return (\n    <div className=\"register-container\">\n      {message ? <p>***{message}***</p> : null}\n      <div className=\"reg-input-box\">\n        <label htmlFor=\"reg-username\" className=\"reg-label\">Username:</label>\n        <input type=\"text\"\n                id=\"reg-username\"\n                value={username}\n                onChange={handleNameChange}\n        />\n      </div>\n      <div className=\"reg-input-box\">\n        <label htmlFor=\"reg-password\" className=\"reg-label\">Password:</label>\n        <input type=\"password\"\n                id=\"reg-password\"\n                value={password}\n                onChange={handlePasswordChange}\n        />\n    </div>\n    <Button text=\"LOGIN\"\n            onClick={handleClick}\n      />\n    <p className=\"reg-text\">Don't have an account?</p>\n    <Link to=\"/register\">\n      <Button text=\"REGISTER NEW USER\" />\n    </Link>\n  </div>\n  )\n}\n\nexport default Login;","import React from 'react';\nimport '../styles/styles.scss';\nimport {Switch, Route, Redirect} from \"react-router-dom\";\nimport {ContextProvider} from \"./Context\";\nimport Main from \"./Main\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/main\" />\n        </Route>\n        <ProtectedRoute path=\"/main\">\n          <ContextProvider>\n            <Main />\n          </ContextProvider>\n        </ProtectedRoute>\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/login\" component={Login} />\n      </Switch>\n    </div>\n    \n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss';\nimport App from './components/App';\nimport {HashRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}